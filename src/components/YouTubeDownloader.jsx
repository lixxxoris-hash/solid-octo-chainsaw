import React, { useState } from 'react';
import './YouTubeDownloader.css';

const YouTubeDownloader = () => {
  const [url, setUrl] = useState('');
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);
  const [format, setFormat] = useState('mp3');

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
    setResult(null);

    try {
      const response = await fetch('/api/download', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ url, format }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
      }

      const data = await response.json();
      setResult(data);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  const handleDownload = () => {
    if (result?.downloadUrl) {
      window.open(result.downloadUrl, '_blank');
    }
  };

  return (
    <div className="youtube-downloader">
      <div className="container">
        <header className="header">
          <h1>üéµ You2Fetch</h1>
          <p>YouTube to MP3/MP4 Converter</p>
        </header>

        <form onSubmit={handleSubmit} className="download-form">
          <div className="input-group">
            <input
              type="url"
              value={url}
              onChange={(e) => setUrl(e.target.value)}
              placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ..."
              className="url-input"
              required
            />
            
            <div className="format-selector">
              <label>
                <input
                  type="radio"
                  value="mp3"
                  checked={format === 'mp3'}
                  onChange={(e) => setFormat(e.target.value)}
                />
                üéµ MP3 (–ê—É–¥–∏–æ)
              </label>
              <label>
                <input
                  type="radio"
                  value="mp4"
                  checked={format === 'mp4'}
                  onChange={(e) => setFormat(e.target.value)}
                />
                üé¨ MP4 (–í–∏–¥–µ–æ)
              </label>
            </div>

            <button 
              type="submit" 
              disabled={loading || !url}
              className="download-btn"
            >
              {loading ? '‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...' : 'üì• –°–∫–∞—á–∞—Ç—å'}
            </button>
          </div>
        </form>

        {error && (
          <div className="error-message">
            ‚ùå {error}
          </div>
        )}

        {result && (
          <div className="result">
            <h3>‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é!</h3>
            <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {result.title}</p>
            <button onClick={handleDownload} className="final-download-btn">
              üì• –°–∫–∞—á–∞—Ç—å {format.toUpperCase()}
            </button>
          </div>
        )}

        <div className="features">
          <div className="feature">
            <span>üöÄ</span>
            <h4>–ë—ã—Å—Ç—Ä–æ</h4>
            <p>–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è</p>
          </div>
          <div className="feature">
            <span>üîí</span>
            <h4>–ë–µ–∑–æ–ø–∞—Å–Ω–æ</h4>
            <p>–ë–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</p>
          </div>
          <div className="feature">
            <span>üéØ</span>
            <h4>–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ</h4>
            <p>–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default YouTubeDownloader;